ext {
    deps = [
            glide        : [
                    api                               : 'org.apache.fineract.cn:api:spring_boot_2-SNAPSHOT',
                    async                             : 'org.apache.fineract.cn:async:spring_boot_2-SNAPSHOT',
                    crypto                            : 'org.apache.fineract.cn:crypto:spring_boot_2-SNAPSHOT',
                    test                              : 'org.apache.fineract.cn:test:spring_boot_2-SNAPSHOT',
                    lang                              : 'org.apache.fineract.cn:lang:spring_boot_2-SNAPSHOT',
                    cassandra                         : 'org.apache.fineract.cn:cassandra:spring_boot_2-SNAPSHOT',
                    postgresql                        : 'org.apache.fineract.cn:postgresql:spring_boot_2-SNAPSHOT',
                    anubisApi                         : 'org.apache.fineract.cn.anubis:api:spring_boot_2-SNAPSHOT',
                    anubisTest                        : 'org.apache.fineract.cn.anubis:test:spring_boot_2-SNAPSHOT',
                    anubisLibrary                     : 'org.apache.fineract.cn.anubis:library:spring_boot_2-SNAPSHOT',
                    identityApi                       : 'org.apache.fineract.cn.identity:api:spring_boot_2-SNAPSHOT',
                    serviceStarter                    : 'org.apache.fineract.cn:service-starter:spring_boot_2-SNAPSHOT',
                    permittedFeignClientApi           : 'org.apache.fineract.cn.permitted-feign-client:api:spring_boot_2-SNAPSHOT',
                    permittedFeignClientLibrary       : 'org.apache.fineract.cn.permitted-feign-client:library:spring_boot_2-SNAPSHOT',
                    permittedFeignClientAnotherForTest: 'org.apache.fineract.cn.permitted-feign-client:another-for-test:spring_boot_2-SNAPSHOT',
            ],
            spring       : [],
            springCloud  : [
                    security    : 'org.springframework.boot:spring-boot-starter-security',
                    configClient: 'org.springframework.cloud:spring-cloud-starter-config',
                    openFeign   : 'org.springframework.cloud:spring-cloud-starter-openfeign',
                    mavenBom    : 'org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR7',
                    eurekaClient: 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client',
            ],
            springBoot   : [
                    web      : 'org.springframework.boot:spring-boot-starter-web',
                    test     : 'org.springframework.boot:spring-boot-starter-test',
                    jetty    : 'org.springframework.boot:spring-boot-starter-jetty',
                    actuator : 'org.springframework.boot:spring-boot-starter-actuator',
                    jpa      : 'org.springframework.boot:spring-boot-starter-data-jpa',
                    validator: 'org.springframework.boot:spring-boot-starter-validation',
                    ribbon   : 'org.springframework.cloud:spring-cloud-starter-netflix-ribbon',
                    cassandra: 'org.springframework.boot:spring-boot-starter-data-cassandra',
            ],
            miscellaneous: [
                    gson                     : 'com.google.code.gson:gson',
                    postgres                 : 'org.postgresql:postgresql',
                    jwt                      : 'io.jsonwebtoken:jjwt:0.9.1',
                    expiringMap              : 'net.jodah:expiringmap:0.5.9',
                    flyway                   : 'org.flywaydb:flyway-core:6.5.4',
                    nettyAll                 : 'io.netty:netty-all:4.1.51.Final',
                    lombok                   : 'org.projectlombok:lombok:1.18.12',
                    junit5                   : 'org.junit.jupiter:junit-jupiter:5.6.2',
                    findBugs                 : 'com.google.code.findbugs:jsr305:3.0.2',
                    cassandraUnit            : 'org.cassandraunit:cassandra-unit:4.3.1.0',
                    otjPgEmbedded            : 'com.opentable.components:otj-pg-embedded:0.13.3',
                    nettyTransportNativeEpoll: 'io.netty:netty-transport-native-epoll:4.1.51.Final',
            ]
    ]
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://mifos.jfrog.io/mifos/libs-snapshot/' }
    maven {
        url = 'https://glide.jfrog.io/artifactory/snapshot/'
        credentials {
            username = artifactoryUsername
            password = artifactoryPassword
        }
    }
}

artifactory {
    contextUrl = System.getenv("ARTIFACTORY_CONTEXT_URL")
    publish {
        repository {
            repoKey = 'snapshot-local'
            username = System.getenv("ARTIFACTORY_USERNAME")
            password = System.getenv("ARTIFACTORY_PASSWORD")
            maven = true
        }
        defaults {
            publications 'mavenJava'
        }
    }
}
